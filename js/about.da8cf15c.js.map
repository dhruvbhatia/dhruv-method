{"version":3,"sources":["webpack:///./src/views/Stalk.vue","webpack:///./src/views/Stalk.vue?2219","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./node_modules/core-js/modules/es.array.find-index.js","webpack:///./src/views/Portfolio.vue","webpack:///./src/views/Portfolio.vue?5575"],"names":["class","script","render","$","$find","find","addToUnscopables","FIND","SKIPS_HOLES","Array","target","proto","forced","callbackfn","this","arguments","length","undefined","$findIndex","findIndex","FIND_INDEX","loading","title","balances","Intl","NumberFormat","format","totalPortfolioValue","value","responsiveLayout","field","header","sortable","body","data","Date","history","timestamp","toLocaleString","valueUSD","bnbUSD","bnbBalance","bnbBalanceInUSD","totalPortfolioInUSD","beforeMount","getBNBUSD","getPortfolio","computed","style","currency","reduce","sum","n","methods","axios","url","method","headers","query","then","result","ethereum","dexTrades","quotePrice","address","map","getValueUSDForHolding","symbol","getLatestQuote","dataIndex","o","console","log","obj","res"],"mappings":"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","file":"js/about.da8cf15c.js","sourcesContent":["<template>\n  <div class=\"stalk\">\n    <h1>This is the whale stalker page</h1>\n  </div>\n</template>\n","import { render } from \"./Stalk.vue?vue&type=template&id=f16dd652\"\nconst script = {}\nscript.render = render\n\nexport default script","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","'use strict';\nvar $ = require('../internals/export');\nvar $findIndex = require('../internals/array-iteration').findIndex;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.es/ecma262/#sec-array.prototype.findindex\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND_INDEX);\n","<template>\n  <div class=\"portfolio\">\n    <div class=\"p-grid\">\n      <div v-if=\"loading\" class=\"p-col-6\">\n        <ProgressSpinner />\n      </div>\n      <div v-else class=\"p-col-6\">\n        <h1>My Portfolio</h1>\n        <Card>\n          <template #title>\n            Balance\n          </template>\n          <template v-if=\"balances\" #content>\n            <b>BNB:</b>\n\n            {{\n              new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(\n                bnbBalanceInUSD\n              )\n            }}\n            â€¢\n            <b>Total:</b>\n            {{ totalPortfolioValue }}\n          </template>\n        </Card>\n        <DataTable :value=\"balances\" responsiveLayout=\"scroll\">\n          <Column field=\"currency.name\" header=\"Name\" :sortable=\"true\"></Column>\n          <Column field=\"currency.symbol\" header=\"Symbol\" :sortable=\"true\"></Column>\n          <Column field=\"history[0].timestamp\" header=\"Bought\" :sortable=\"true\">\n            <template #body=\"{ data }\">\n              {{\n                new Date(data.history[0].timestamp).toLocaleString('en-AU', {\n                  weekday: 'short',\n                  day: 'numeric',\n                  month: 'short',\n                  hour: 'numeric',\n                  minute: 'numeric',\n                  hour12: true,\n                })\n              }}\n            </template>\n          </Column>\n          <Column field=\"value\" header=\"Amount #\" :sortable=\"true\"></Column>\n          <Column field=\"valueUSD\" header=\"Amount USD\" :sortable=\"true\">\n            <template #body=\"{ data }\">\n              <div v-if=\"typeof data.valueUSD == 'number'\">\n                {{\n                  new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(\n                    data.valueUSD\n                  )\n                }}\n              </div>\n            </template>\n          </Column>\n        </DataTable>\n        BNB\n\n        {{ bnbUSD }}\n        sdasad\n        {{ bnbBalance }}\n        <hr />\n        {{ balances }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\n\nexport default {\n  data() {\n    return {\n      balances: null,\n      bnbBalance: null,\n      bnbBalanceInUSD: null,\n      totalPortfolioInUSD: null,\n      bnbUSD: null,\n      loading: null,\n    }\n  },\n  beforeMount() {\n    this.getBNBUSD()\n    this.getPortfolio()\n  },\n  computed: {\n    totalPortfolioValue() {\n      // get total portfolio\n      return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(\n        this.balances.reduce(function(sum, n) {\n          return sum + n.valueUSD\n        }, 0)\n      )\n    },\n  },\n  methods: {\n    async getBNBUSD() {\n      this.loading = true\n      this.axios({\n        url: 'https://graphql.bitquery.io',\n        method: 'post',\n        headers: {\n          'X-API-KEY': 'BQYPGo0RgLC02Cl47EOVo8UvQGxHhO2S',\n          'Content-Type': 'application/json',\n        },\n        data: {\n          query: `\n      query BNBUSD {\n        ethereum(network: bsc) {\n          dexTrades(options: {limit: 1, desc: \"timeInterval.minute\"},\n            exchangeName: {is: \"Pancake v2\"},\n            baseCurrency: {is: \"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\"},\n            quoteCurrency: {is: \"0x55d398326f99059ff775485246999027b3197955\"}) {\n\n\n            timeInterval {\n              minute\n            }\n\n\n            baseCurrency {\n              symbol\n              address\n            }\n            baseAmount\n            quoteCurrency {\n              symbol\n              address\n            }\n            quoteAmount\n\n            trades: count\n            quotePrice\n\n            maximum_price: quotePrice(calculate: maximum)\n            minimum_price: quotePrice(calculate: minimum)\n                  median_price: quotePrice(calculate: median)\n\n            open_price: minimum(of: block get: quote_price)\n            close_price: maximum(of: block get: quote_price)\n\n          }\n        }\n      }\n      `,\n        },\n      }).then(result => {\n        this.bnbUSD = result.data.data.ethereum.dexTrades[0].quotePrice\n        this.loading = false\n      })\n    },\n    async getPortfolio() {\n      this.loading = true\n      this.axios({\n        url: 'https://graphql.bitquery.io',\n        method: 'post',\n        headers: {\n          'X-API-KEY': 'BQYPGo0RgLC02Cl47EOVo8UvQGxHhO2S',\n          'Content-Type': 'application/json',\n        },\n        data: {\n          query: `\n      query MyBalances {\n        ethereum(network: bsc) {\n          address(address: {is: \"0x4ab5e20a7b2ce1c2adc18eb202dc2baea8ad9bc7\"}) {\n            balances {\n              currency {\n                address\n                name\n                symbol\n                tokenType\n              }\n              value\n              history {\n                timestamp\n                value\n              }\n            }\n          }\n        }\n      }\n      `,\n        },\n      }).then(result => {\n        this.balances = result.data.data.ethereum.address[0].balances\n\n        _.map(result.data.data.ethereum.address[0].balances, this.getValueUSDForHolding)\n\n        this.bnbBalance = _.find(this.balances, { currency: { symbol: 'BNB' } })\n        this.bnbBalanceInUSD = this.bnbBalance.valueUSD\n\n        this.loading = false\n      })\n    },\n    async getLatestQuote(address) {\n      this.loading = true\n      this.axios({\n        url: 'https://graphql.bitquery.io',\n        method: 'post',\n        headers: {\n          'X-API-KEY': 'BQYPGo0RgLC02Cl47EOVo8UvQGxHhO2S',\n          'Content-Type': 'application/json',\n        },\n        data: {\n          query: `\n      query LatestQuoteInBNB {\n        ethereum(network: bsc) {\n          dexTrades(\n            options: {limit: 1, desc: \"timeInterval.minute\"}\n            exchangeName: {in: [\"Pancake\", \"Pancake v2\"]}\n            baseCurrency: {is: \"${address}\"}\n            quoteCurrency: {in: [\"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\"]}\n          ) {\n            timeInterval {\n              minute\n            }\n            baseCurrency {\n              symbol\n              address\n            }\n            baseAmount\n            quoteCurrency {\n              symbol\n              address\n            }\n            quoteAmount\n            trades: count\n            quotePrice\n            median_price: quotePrice(calculate: median)\n            maximum_price: quotePrice(calculate: maximum)\n            minimum_price: quotePrice(calculate: minimum)\n            open_price: minimum(of: block, get: quote_price)\n            close_price: maximum(of: block, get: quote_price)\n          }\n        }\n      }\n      `,\n        },\n      }).then(result => {\n        var dataIndex = _.findIndex(this.balances, function(o) {\n          return o.currency.address == address\n        })\n\n        if (result.data.data.ethereum.dexTrades.length == 0) {\n          // do nothing\n        } else {\n          // update the quoteprice\n\n          this.balances[dataIndex].valueUSD =\n            result.data.data.ethereum.dexTrades[0].quotePrice *\n            this.balances[dataIndex].value *\n            this.bnbUSD\n\n          //JNR33\n          if (address == '0x35ec445db1f49315b49f9cebc80f2d705a0c34e1') {\n            console.log('jnr')\n            this.balances[dataIndex].valueUSD = 0\n          } else if (address == '0x05f2df7b3d612a23fe12162a6c996447dce728a5') {\n            //yummy bug\n            this.balances[dataIndex].valueUSD = 0\n          }\n        }\n        this.loading = false\n      })\n    },\n    getValueUSDForHolding(obj) {\n      var address = obj.currency.address\n      console.log(address)\n\n      if (address.length > 3) {\n        this.getLatestQuote(address).then(res => {\n          console.log(res)\n        })\n      } else {\n        // bnb address\n        var dataIndex = _.findIndex(this.balances, function(o) {\n          return o.currency.address == address\n        })\n\n        this.balances[dataIndex].valueUSD = this.balances[dataIndex].value * this.bnbUSD\n      }\n\n      return\n    },\n  },\n}\n</script>\n","import { render } from \"./Portfolio.vue?vue&type=template&id=51a7217e\"\nimport script from \"./Portfolio.vue?vue&type=script&lang=js\"\nexport * from \"./Portfolio.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}